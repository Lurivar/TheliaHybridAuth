<?xml version="1.0" encoding="UTF-8" ?>

<config xmlns="http://thelia.net/schema/dic/config"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:schemaLocation="http://thelia.net/schema/dic/config http://thelia.net/schema/dic/config/thelia-1.0.xsd">

    <loops>
        <loop name="providers.list" class="TheliaHybridAuth\Loop\ListProviders" />
    </loops>

    <forms>
        <form name="register.hybrid.auth" class="TheliaHybridAuth\Form\Register" />
        <form name="hybridauth.confirm.password" class="TheliaHybridAuth\Form\ConfirmPassword" />
        <form name="create.provider" class="TheliaHybridAuth\Form\CreateProvider"/>
        <form name="base.provider" class="TheliaHybridAuth\Form\BaseProvider"/>
        <form name="update.provider" class="TheliaHybridAuth\Form\UpdateProvider"/>
    </forms>

    <hooks>
        <hook id="hybridauth.front.hook" class="TheliaHybridAuth\Hook\FrontHook" scope="request">
            <tag name="hook.event_listener" event="login.main-bottom" type="front" method="onLoginMainBottom"/>
            <tag name="hook.event_listener" event="login.form-top" type="front" method="onLoginFormTop"/>
            <tag name="hook.event_listener" event="register.top" type="front" method="onRegisterTop"/>
            <tag name="hook.event_listener" event="login.javascript-initialization" type="front" method="onLoginJavascriptInitialization"/>
            <tag name="hook.event_listener" event="account.after-javascript-include" type="front" method="onAccountAfterJavascriptInclude"/>
            <tag name="hook.event_listener" event="account.additional" type="front" method="onAccountAdditional"/>
            <tag name="hook.event_listener" event="main.stylesheet" type="front" method="onMainStylesheet"/>
            <tag name="hook.event_listener" event="main.javascript-initialization" type="front" method="onMainJavascriptInitialization"/>
            <argument type="service" id="request" />
        </hook>
        <hook id="hybridauth.back.hook" class="TheliaHybridAuth\Hook\BackHook" scope="request">
            <tag name="hook.event_listener" event="module.configuration" type="back" method="onModuleConfiguration"/>
            <tag name="hook.event_listener" event="module.config-js" type="back" method="onModuleConfigJs"/>
        </hook>
    </hooks>
</config>
